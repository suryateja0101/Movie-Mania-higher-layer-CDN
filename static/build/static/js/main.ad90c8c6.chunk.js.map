{"version":3,"sources":["constants/memberConstants.js","constants/organizationConstants.js","store.js","reducers/memberReducers.js","reducers/organizationReducers.js","components/Loader.js","components/Message.js","actions/organizationActions.js","actions/memberActions.js","components/Header.js","components/Footer.js","images/MotoOfOurOrganization.JPG","screens/MotoOfOurOrganizationScreen.js","screens/DonationScreen.js","screens/MemberScreens/MemberHomeScreen.js","screens/OrganizationScreens/OrganizationHomeScreen.js","screens/MemberScreens/MemberRegisterScreen.js","screens/MemberScreens/MemberLoginScreen.js","screens/MemberScreens/MemberUpdateDetailsScreen.js","screens/OrganizationScreens/OrganizationViewMembersScreen.js","screens/OrganizationScreens/OrganizationRegisterScreen.js","screens/OrganizationScreens/OrganizationLoginScreen.js","screens/OrganizationScreens/OrganizationUpdateDetailsScreen.js","screens/OrganizationScreens/OrganizationPostsViewPostsScreen.js","screens/OrganizationScreens/OrganizationPostsCreatePostsScreen.js","screens/MemberScreens/MemberViewTasksScreen.js","App.js","reportWebVitals.js","index.js"],"names":["MEMBER_TASKS_LIST_REQUEST","MEMBER_TASKS_LIST_SUCCESS","MEMBER_TASKS_LIST_FAIL","MEMBER_LIST_REQUEST","MEMBER_LIST_SUCCESS","MEMBER_LIST_FAIL","MEMBER_LOGIN_REQUEST","MEMBER_LOGIN_SUCCESS","MEMBER_LOGIN_FAIL","MEMBER_LOGOUT","MEMBER_REGISTER_REQUEST","MEMBER_REGISTER_SUCCESS","MEMBER_REGISTER_FAIL","MEMBER_DETAILS_REQUEST","MEMBER_DETAILS_SUCCESS","MEMBER_DETAILS_FAIL","MEMBER_DETAILS_RESET","MEMBER_UPDATE_PROFILE_REQUEST","MEMBER_UPDATE_PROFILE_SUCCESS","MEMBER_UPDATE_PROFILE_FAIL","MEMBER_UPDATE_PROFILE_RESET","ORGANIZATION_UPDATE_POSTS_LIST_REQUEST","ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS","ORGANIZATION_UPDATE_POSTS_LIST_FAIL","ORGANIZATION_POSTS_LIST_REQUEST","ORGANIZATION_POSTS_LIST_SUCCESS","ORGANIZATION_POSTS_LIST_FAIL","ORGANIZATION_POSTS_CREATE_POST_REQUEST","ORGANIZATION_POSTS_CREATE_POST_SUCCESS","ORGANIZATION_POSTS_CREATE_POST_FAIL","ORGANIZATION_LOGIN_REQUEST","ORGANIZATION_LOGIN_SUCCESS","ORGANIZATION_LOGIN_FAIL","ORGANIZATION_LOGOUT","ORGANIZATION_REGISTER_REQUEST","ORGANIZATION_REGISTER_SUCCESS","ORGANIZATION_REGISTER_FAIL","ORGANIZATION_DETAILS_REQUEST","ORGANIZATION_DETAILS_SUCCESS","ORGANIZATION_DETAILS_FAIL","ORGANIZATION_DETAILS_RESET","ORGANIZATION_UPDATE_PROFILE_REQUEST","ORGANIZATION_UPDATE_PROFILE_SUCCESS","ORGANIZATION_UPDATE_PROFILE_FAIL","ORGANIZATION_UPDATE_PROFILE_RESET","reducer","combineReducers","memberList","state","members","action","type","loading","payload","error","memberLogin","memberInfo","memberRegister","organizationRegister","organizationInfo","organizationLogin","memberDetails","member","memberUpdateProfile","success","organizationDetails","organization","organizationUpdateProfile","organizationPostList","organizationPosts","organizationPostCreatePost","organizationPostsCreatePost","memberTasksList","memberTask","organizationPostUpdateList","organizationPostsUpdatePost","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Loader","Spinner","animation","role","style","height","width","margin","display","Message","variant","children","Alert","organizationPostslist","postedByOrganization","dispatch","getState","a","config","headers","axios","post","data","response","message","listMembers","get","Header","history","useSelector","useDispatch","logoutHandler","removeItem","Navbar","bg","expand","collapseOnSelect","Container","to","className","Brand","class","Toggle","aria-controls","Collapse","id","NavDropdown","title","email","Item","onClick","Nav","Link","Footer","background","Row","Col","MotoOfOurOrganizationScreen","position","top","defaultActiveKey","color","textAlign","src","image","disabled","DonationScreen","href","MemberHomeScreen","OrganizationHomeScreen","MemberRegisterScreen","useState","setEmail","password","setPassword","username","setUsername","addressLocation","setAddressLocation","useEffect","Form","onSubmit","e","preventDefault","setItem","stringify","membersRegister","Group","controlId","Label","Control","placeholder","value","onChange","target","Heading","Button","MemberLoginScreen","location","redirect","search","split","push","membersLogin","MemberUpdateDetailsScreen","bloodGroup","setBloodGroup","_id","put","membersUpdateProfile","OrganizationViewMembersScreen","Card","Table","striped","bordered","hover","map","classNmae","Object","keys","length","OrganizationRegisterScreen","organizationsRegister","OrganizationLoginScreen","organizationsLogin","OrganizationUpdateDetailsScreen","chairman","setChairman","organizationsUpdateProfile","OrganizationPostsViewPostsScreen","organizationPost","editModel","setEditmodel","setSelectedPost","setRequirementInformation","setMemberSelected","post_id","setPost_id","selectedFile","setSelectedFile","description","setDescription","videoPost_id","setVideoPost_id","errorOrganizationPostUpdateList","loadingOrganizationPostUpdateList","handleClose","onChangeHandler1","files","console","log","formData","FormData","append","fetch","method","body","alert","name","index","postedByOrganizationEmail","controls","video_file","moment","createdAt","format","requirementInformation","MemberSelected","Modal","show","onHide","closeButton","Title","Body","OrganizationPostsCreatePostsScreen","organizationsPostsCreatePost","MemberViewTasksScreen","memberTasks","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad90c8c6.chunk.js","sourcesContent":["\nexport const MEMBER_TASKS_LIST_REQUEST = 'MEMBER_TASKS_LIST_REQUEST'\nexport const MEMBER_TASKS_LIST_SUCCESS = 'MEMBER_TASKS_LIST_SUCCESS'\nexport const MEMBER_TASKS_LIST_FAIL = 'MEMBER_TASKS_LIST_FAIL'\n\nexport const MEMBER_LIST_REQUEST = 'MEMBER_LIST_REQUEST'\nexport const MEMBER_LIST_SUCCESS = 'MEMBER_LIST_SUCCESS'\nexport const MEMBER_LIST_FAIL = 'MEMBER_LIST_FAIL'\n\nexport const MEMBER_LOGIN_REQUEST = 'MEMBER_LOGIN_REQUEST'\nexport const MEMBER_LOGIN_SUCCESS = 'MEMBER_LOGIN_SUCCESS'\nexport const MEMBER_LOGIN_FAIL = 'MEMBER_LOGIN_FAIL'\n\nexport const MEMBER_LOGOUT = 'MEMBER_LOGOUT'\n\n\nexport const MEMBER_REGISTER_REQUEST = 'MEMBER_REGISTER_REQUEST'\nexport const MEMBER_REGISTER_SUCCESS = 'MEMBER_REGISTER_SUCCESS'\nexport const MEMBER_REGISTER_FAIL = 'MEMBER_REGISTER_FAIL'\n\nexport const MEMBER_DETAILS_REQUEST = 'MEMBER_DETAILS_REQUEST'\nexport const MEMBER_DETAILS_SUCCESS = 'MEMBER_DETAILS_SUCCESS'\nexport const MEMBER_DETAILS_FAIL = 'MEMBER_DETAILS_FAIL'\nexport const MEMBER_DETAILS_RESET = 'MEMBER_DETAILS_RESET'\n\nexport const MEMBER_UPDATE_PROFILE_REQUEST = 'MEMBER_UPDATE_PROFILE_REQUEST'\nexport const MEMBER_UPDATE_PROFILE_SUCCESS = 'MEMBER_UPDATE_PROFILE_SUCCESS'\nexport const MEMBER_UPDATE_PROFILE_FAIL = 'MEMBER_UPDATE_PROFILE_FAIL'\nexport const MEMBER_UPDATE_PROFILE_RESET = 'MEMBER_UPDATE_PROFILE_RESET'","export const ORGANIZATION_UPDATE_POSTS_LIST_REQUEST = 'ORGANIZATION_UPDATE_POSTS_LIST_REQUEST'\nexport const ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS = 'ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS'\nexport const ORGANIZATION_UPDATE_POSTS_LIST_FAIL = 'ORGANIZATION_UPDATE_POSTS_LIST_FAIL'\n\n\n\n\nexport const ORGANIZATION_POSTS_LIST_REQUEST = 'ORGANIZATION_POST_LIST_REQUEST'\nexport const ORGANIZATION_POSTS_LIST_SUCCESS = 'ORGANIZATION_POST_LIST_SUCCESS'\nexport const ORGANIZATION_POSTS_LIST_FAIL = 'ORGANIZATION_POSTS_LIST_FAIL'\n\nexport const ORGANIZATION_POSTS_CREATE_POST_REQUEST = 'ORGANIZATION_POSTS_CREATE_POST_REQUEST'\nexport const ORGANIZATION_POSTS_CREATE_POST_SUCCESS = 'ORGANIZATION_POSTS_CREATE_POST_SUCCESS'\nexport const ORGANIZATION_POSTS_CREATE_POST_FAIL = 'ORGANIZATION_POSTS_CREATE_POST_FAIL'\n\n\nexport const ORGANIZATION_LOGIN_REQUEST = 'ORGANIZATION_LOGIN_REQUEST'\nexport const ORGANIZATION_LOGIN_SUCCESS = 'ORGANIZATION_LOGIN_SUCCESS'\nexport const ORGANIZATION_LOGIN_FAIL = 'ORGANIZATION_LOGIN_FAIL'\nexport const ORGANIZATION_LOGOUT = 'ORGANIZATION_LOGOUT'\n\n\nexport const ORGANIZATION_REGISTER_REQUEST = 'ORGANIZATION_REGISTER_REQUEST'\nexport const ORGANIZATION_REGISTER_SUCCESS = 'ORGANIZATION_REGISTER_SUCCESS'\nexport const ORGANIZATION_REGISTER_FAIL = 'ORGANIZATION_REGISTER_FAIL'\n\n\n\nexport const ORGANIZATION_DETAILS_REQUEST = 'ORGANIZATION_DETAILS_REQUEST'\nexport const ORGANIZATION_DETAILS_SUCCESS = 'ORGANIZATION_DETAILS_SUCCESS'\nexport const ORGANIZATION_DETAILS_FAIL = 'ORGANIZATION_DETAILS_FAIL'\nexport const ORGANIZATION_DETAILS_RESET = 'ORGANIZATION_DETAILS_RESET'\n\nexport const ORGANIZATION_UPDATE_PROFILE_REQUEST = 'ORGANIZATION_UPDATE_PROFILE_REQUEST'\nexport const ORGANIZATION_UPDATE_PROFILE_SUCCESS = 'ORGANIZATION_UPDATE_PROFILE_SUCCESS'\nexport const ORGANIZATION_UPDATE_PROFILE_FAIL = 'ORGANIZATION_UPDATE_PROFILE_FAIL'\nexport const ORGANIZATION_UPDATE_PROFILE_RESET = 'ORGANIZATION_UPDATE_PROFILE_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { memberListReducer, memberLoginReducer, memberRegisterReducer, memberDetailsReducer, memberUpdateProfileReducer, memberTasksListReducer } from './reducers/memberReducers'\nimport { organizationRegisterReducer, organizationLoginReducer, organizationDetailsReducer, organizationUpdateProfileReducer, organizationPostListReducer, organizationPostCreatePostReducer, organizationPostUpdatePostReducer } from './reducers/organizationReducers'\n\n\nconst reducer = combineReducers({\n    memberList: memberListReducer,\n    memberLogin: memberLoginReducer,\n    memberRegister: memberRegisterReducer,\n    organizationRegister: organizationRegisterReducer,\n    organizationLogin: organizationLoginReducer,\n    memberDetails: memberDetailsReducer,\n    memberUpdateProfile: memberUpdateProfileReducer,\n    organizationDetails: organizationDetailsReducer,\n    organizationUpdateProfile: organizationUpdateProfileReducer,\n    organizationPostList: organizationPostListReducer,\n    organizationPostCreatePost: organizationPostCreatePostReducer,\n    memberTasksList: memberTasksListReducer,\n    organizationPostUpdateList: organizationPostUpdatePostReducer,\n\n})\n\nconst memberInfoFromStorage = localStorage.getItem('memberInfo') ?\n    JSON.parse(localStorage.getItem('memberInfo')) : null\n\nconst organizationInfoFromStorage = localStorage.getItem('organizationInfo') ?\n    JSON.parse(localStorage.getItem('organizationInfo')) : null\n\nconst initialState = {\n    memberLogin: { memberInfo: memberInfoFromStorage },\n    organizationLogin: { organizationInfo: organizationInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import axios from 'axios'\nimport {\n    MEMBER_LIST_REQUEST, MEMBER_LIST_SUCCESS, MEMBER_LIST_FAIL,\n    MEMBER_LOGIN_REQUEST, MEMBER_LOGIN_SUCCESS, MEMBER_LOGIN_FAIL, MEMBER_LOGOUT,\n    MEMBER_REGISTER_SUCCESS, MEMBER_REGISTER_REQUEST, MEMBER_REGISTER_FAIL,\n    MEMBER_DETAILS_REQUEST,\n    MEMBER_DETAILS_SUCCESS,\n    MEMBER_DETAILS_FAIL,\n    MEMBER_DETAILS_RESET,\n    MEMBER_UPDATE_PROFILE_REQUEST,\n    MEMBER_UPDATE_PROFILE_SUCCESS,\n    MEMBER_UPDATE_PROFILE_FAIL,\n    MEMBER_UPDATE_PROFILE_RESET,\n    MEMBER_TASKS_LIST_REQUEST,\n    MEMBER_TASKS_LIST_SUCCESS,\n    MEMBER_TASKS_LIST_FAIL,\n} from '../constants/memberConstants'\n\n\n\nexport const memberTasksListReducer = (state = { memberTask: [] }, action) => {\n    switch (action.type) {\n        case MEMBER_TASKS_LIST_REQUEST:\n            return { loading: true, state }\n\n        case MEMBER_TASKS_LIST_SUCCESS:\n            return { loading: false, memberTask: action.payload }\n\n        case MEMBER_TASKS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const memberListReducer = (state = { members: [] }, action) => {\n    switch (action.type) {\n        case MEMBER_LIST_REQUEST:\n            return { loading: true, state }\n\n        case MEMBER_LIST_SUCCESS:\n            return { loading: false, members: action.payload }\n\n        case MEMBER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const memberLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case MEMBER_LOGIN_SUCCESS:\n            return { loading: false, memberInfo: action.payload }\n\n        case MEMBER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n\n}\n\n\n\nexport const memberRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case MEMBER_REGISTER_SUCCESS:\n            return { loading: false, memberInfo: action.payload }\n\n        case MEMBER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const memberDetailsReducer = (state = { member: {} }, action) => {\n    switch (action.type) {\n        case MEMBER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case MEMBER_DETAILS_SUCCESS:\n            return { loading: false, member: action.payload }\n\n        case MEMBER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_DETAILS_RESET:\n            return { member: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const memberUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case MEMBER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case MEMBER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, memberInfo: action.payload }\n\n        case MEMBER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case MEMBER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n","import axios from 'axios'\nimport {\n\n    ORGANIZATION_REGISTER_REQUEST, ORGANIZATION_REGISTER_SUCCESS, ORGANIZATION_REGISTER_FAIL, ORGANIZATION_LOGOUT,\n    ORGANIZATION_LOGIN_REQUEST, ORGANIZATION_LOGIN_SUCCESS, ORGANIZATION_LOGIN_FAIL,\n    ORGANIZATION_DETAILS_REQUEST,\n    ORGANIZATION_DETAILS_SUCCESS,\n    ORGANIZATION_DETAILS_FAIL,\n    ORGANIZATION_DETAILS_RESET,\n    ORGANIZATION_UPDATE_PROFILE_REQUEST,\n    ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n    ORGANIZATION_UPDATE_PROFILE_FAIL,\n    ORGANIZATION_UPDATE_PROFILE_RESET,\n    ORGANIZATION_POSTS_LIST_REQUEST,\n    ORGANIZATION_POSTS_LIST_SUCCESS,\n    ORGANIZATION_POSTS_LIST_FAIL,\n    ORGANIZATION_POSTS_CREATE_POST_REQUEST,\n    ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n    ORGANIZATION_POSTS_CREATE_POST_FAIL,\n\n    ORGANIZATION_UPDATE_POSTS_LIST_REQUEST,\n    ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n    ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n\n} from '../constants/organizationConstants'\n\n\nexport const organizationPostUpdatePostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_UPDATE_POSTS_LIST_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS:\n            return { loading: false, organizationPostsUpdatePost: action.payload }\n\n        case ORGANIZATION_UPDATE_POSTS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n\n}\n\n\nexport const organizationPostListReducer = (state = { organizationPosts: [] }, action) => {\n    switch (action.type) {\n        case ORGANIZATION_POSTS_LIST_REQUEST:\n            return { loading: true, state }\n\n        case ORGANIZATION_POSTS_LIST_SUCCESS:\n            return { loading: false, organizationPosts: action.payload }\n\n        case ORGANIZATION_POSTS_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const organizationPostCreatePostReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_POSTS_CREATE_POST_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_POSTS_CREATE_POST_SUCCESS:\n            return { loading: false, organizationPostsCreatePost: action.payload }\n\n        case ORGANIZATION_POSTS_CREATE_POST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const organizationLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_LOGIN_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_LOGIN_SUCCESS:\n            return { loading: false, organizationInfo: action.payload }\n\n        case ORGANIZATION_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n\n}\n\nexport const organizationRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_REGISTER_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_REGISTER_SUCCESS:\n            return { loading: false, organizationInfo: action.payload }\n\n        case ORGANIZATION_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n\n}\n\n\n\n\nexport const organizationDetailsReducer = (state = { organization: {} }, action) => {\n    switch (action.type) {\n        case ORGANIZATION_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case ORGANIZATION_DETAILS_SUCCESS:\n            return { loading: false, organization: action.payload }\n\n        case ORGANIZATION_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_DETAILS_RESET:\n            return { organization: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const organizationUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORGANIZATION_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case ORGANIZATION_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, organizationInfo: action.payload }\n\n        case ORGANIZATION_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case ORGANIZATION_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <span><Spinner animation=\"border\" role='status' style={{\n            height: '100px',\n            width: '100px',\n            margin: 'auto',\n            display: 'block'\n\n        }}>\n\n        </Spinner><span style={{\n\n            width: '100px',\n            margin: 'AUTO',\n            display: 'block'\n\n        }}  >Loading...</span></span>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import axios from 'axios'\nimport {\n\n    ORGANIZATION_REGISTER_REQUEST, ORGANIZATION_REGISTER_SUCCESS, ORGANIZATION_REGISTER_FAIL, ORGANIZATION_LOGOUT,\n    ORGANIZATION_LOGIN_REQUEST, ORGANIZATION_LOGIN_SUCCESS, ORGANIZATION_LOGIN_FAIL,\n    ORGANIZATION_DETAILS_REQUEST,\n    ORGANIZATION_DETAILS_SUCCESS,\n    ORGANIZATION_DETAILS_FAIL,\n    ORGANIZATION_DETAILS_RESET,\n    ORGANIZATION_UPDATE_PROFILE_REQUEST,\n    ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n    ORGANIZATION_UPDATE_PROFILE_FAIL,\n    ORGANIZATION_UPDATE_PROFILE_RESET,\n    ORGANIZATION_POSTS_LIST_REQUEST,\n    ORGANIZATION_POSTS_LIST_SUCCESS,\n    ORGANIZATION_POSTS_LIST_FAIL,\n    ORGANIZATION_POSTS_CREATE_POST_REQUEST,\n    ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n    ORGANIZATION_POSTS_CREATE_POST_FAIL,\n    ORGANIZATION_UPDATE_POSTS_LIST_REQUEST,\n    ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n    ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n\n} from '../constants/organizationConstants'\n\n\n\nexport const organizationsPostsUpdatePost = (_id, requirementInformation, addressLocation, MemberSelected) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/updatePost/',\n            { _id, requirementInformation, addressLocation, MemberSelected, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_UPDATE_POSTS_LIST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const organizationPostslist = (postedByOrganization) => async (dispatch, getState) => {\n    try {\n\n        dispatch({ type: ORGANIZATION_POSTS_LIST_REQUEST })\n        const {\n            memberList: { members },\n        } = getState()\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/organization/viewPosts/',\n            { postedByOrganization, \"isOrganizationMember\": true },\n            config)\n\n        dispatch({\n            type: ORGANIZATION_POSTS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: ORGANIZATION_POSTS_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\nexport const organizationsPostsCreatePost = (postedByOrganization, requirementInformation, postedByOrganizationEmail, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/createPost/',\n            { postedByOrganization, postedByOrganizationEmail, requirementInformation, addressLocation, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_POSTS_CREATE_POST_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const organizationsLogout = () => (dispatch) => {\n    localStorage.removeItem('organizationInfo')\n    dispatch({ type: ORGANIZATION_LOGOUT })\n    dispatch({ type: ORGANIZATION_DETAILS_RESET })\n\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const organizationsLogin = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/login/',\n            { 'email': email, 'password': password, \"isOrganizationMember\": true },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const organizationsRegister = (email, password, username, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_REGISTER_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/organization/register/',\n            { 'email': email, 'password': password, 'username': username, addressLocation, \"isOrganizationMember\": true },\n            config\n        )\n        //  \n        dispatch({\n            type: ORGANIZATION_REGISTER_SUCCESS,\n            payload: data\n        })\n        //For auto login of the profile\n        dispatch({\n            type: ORGANIZATION_LOGIN_SUCCESS,\n            payload: data\n        })///ends here\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getOrganizationDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_DETAILS_REQUEST\n        })\n\n        const {\n            organizationLogin: { organizationInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${organizationInfo._id}`\n            }\n        }\n\n        const { data } = await axios.post(\n            \"/api/organization/getProfile/\",\n            { \"_id\": id },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const organizationsUpdateProfile = (id, username, email, password, addressLocation, chairman) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            organizationLogin: { organizationInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${organizationInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/organization/updateDetails/',\n            { '_id': id, username, email, password, addressLocation, chairman },\n            config\n        )\n\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_RESET,\n            payload: data\n        })\n\n        localStorage.setItem('organizationInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORGANIZATION_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n","import axios from 'axios'\nimport {\n    MEMBER_LIST_REQUEST, MEMBER_LIST_SUCCESS, MEMBER_LIST_FAIL, MEMBER_LOGIN_REQUEST, MEMBER_LOGIN_SUCCESS, MEMBER_LOGIN_FAIL, MEMBER_LOGOUT,\n    MEMBER_REGISTER_SUCCESS, MEMBER_REGISTER_REQUEST, MEMBER_REGISTER_FAIL,\n\n    MEMBER_DETAILS_REQUEST,\n    MEMBER_DETAILS_SUCCESS,\n    MEMBER_DETAILS_FAIL,\n    MEMBER_DETAILS_RESET,\n    MEMBER_UPDATE_PROFILE_REQUEST,\n    MEMBER_UPDATE_PROFILE_SUCCESS,\n    MEMBER_UPDATE_PROFILE_FAIL,\n    MEMBER_UPDATE_PROFILE_RESET,\n    MEMBER_TASKS_LIST_REQUEST,\n    MEMBER_TASKS_LIST_SUCCESS,\n    MEMBER_TASKS_LIST_FAIL\n\n} from '../constants/memberConstants'\n\n// organization/viewPosts/\n\nexport const membersTaskslist = (MemberSelected) => async (dispatch) => {\n    try {\n\n        dispatch({ type: MEMBER_TASKS_LIST_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/member/viewTasks/',\n            { MemberSelected, \"isOrganizationMember\": false },\n            config)\n\n        dispatch({\n            type: MEMBER_TASKS_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: MEMBER_TASKS_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\nexport const listMembers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MEMBER_LIST_REQUEST })\n\n        const { data } = await axios.get('/api/organization/viewMembers/')\n\n        dispatch({\n            type: MEMBER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    }\n    catch (error) {\n        dispatch({\n            type: MEMBER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n            //error.response && error.response.data.message ?? error.response.data.message : error.message\n        })\n\n    }\n\n\n}\n\n\nexport const membersLogin = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: MEMBER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/member/login/',\n            { 'email': email, 'password': password, \"isOrganizationMember\": false },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const membersLogout = () => (dispatch) => {\n    localStorage.removeItem('memberInfo')\n    dispatch({ type: MEMBER_LOGOUT })\n    dispatch({ type: MEMBER_DETAILS_RESET })\n    // dispatch({ type: ORDER_LIST_MY_RESET })\n    // dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const membersRegister = (email, password, username, addressLocation) => async (dispatch) => {\n    try {\n        dispatch({\n            type: MEMBER_REGISTER_REQUEST\n        })\n        // \n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/member/register/',\n            { 'email': email, 'password': password, 'username': username, addressLocation, \"isOrganizationMember\": false },\n            config\n        )\n        //  \n        dispatch({\n            type: MEMBER_REGISTER_SUCCESS,\n            payload: data\n        })\n        //For auto login of the profile\n        dispatch({\n            type: MEMBER_LOGIN_SUCCESS,\n            payload: data\n        })///ends here\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const getMemberDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MEMBER_DETAILS_REQUEST\n        })\n\n        const {\n            memberLogin: { memberInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${memberInfo._id}`\n            }\n        }\n\n        const { data } = await axios.post(\n            \"/api/member/getProfile/\",\n            { \"_id\": id },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n\n\nexport const membersUpdateProfile = (id, username, email, password, addressLocation, bloodGroup) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            memberLogin: { memberInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n                // Authorization: `Bearer ${memberInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/member/updateDetails/',\n            { '_id': id, username, email, password, addressLocation, bloodGroup },\n            config\n        )\n\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_RESET,\n            payload: data\n        })\n\n        localStorage.setItem('memberInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: MEMBER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n        })\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link, Switch, Redirect } from 'react-router-dom'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\n\nimport ReactDOM from 'react-dom';\n\nimport Loader from './Loader'\nimport Message from './Message'\nimport { organizationsLogout } from '../actions/organizationActions'\nimport { membersLogout } from '../actions/memberActions'\nfunction Header({ history }) {\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const dispatch = useDispatch()\n\n    const logoutHandler = history => () => {\n\n\n        dispatch(organizationsLogout())\n        dispatch(membersLogout())\n\n\n    }\n\n\n\n    return (<Navbar bg=\"\" variant='dark' expand=\"lg\" collapseOnSelect style={{ 'background-color': '#007931' }}>\n        <Container>\n            <LinkContainer to=\"/\" className='my-1 p-1' >\n                <Navbar.Brand><i class=\"fas fa-hands-helping \"   ></i>The Helping Hands</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{ 'justify-content': 'flex-end' }}>\n\n\n                {organizationInfo ? (\n\n                    <NavDropdown title={organizationInfo.email} id='email' className='my-1 p-1'>\n                        <LinkContainer to='/OrganizationUpdateDetailsScreen'>\n                            <NavDropdown.Item>Organization Profile</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/OrganizationViewMembersScreen'>\n                            <NavDropdown.Item>View Members Profile Details</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/OrganizationPostsViewPostsScreen'>\n                            <NavDropdown.Item>View Organization Posts details</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/OrganizationPostsCreatePostsScreen'>\n                            <NavDropdown.Item>Create Organization Posts</NavDropdown.Item>\n                        </LinkContainer>\n\n\n\n                        <NavDropdown.Item onClick={logoutHandler(history)}>Logout</NavDropdown.Item>\n\n                    </NavDropdown>\n                ) : memberInfo ? (\n\n                    <NavDropdown title={memberInfo.email} id='email' className='my-1 p-1'>\n                        <LinkContainer to='/MemberUpdateDetailsScreen'>\n                            <NavDropdown.Item>Member Profile</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/MemberViewTasksScreen'>\n                            <NavDropdown.Item>View Member's Assigned Task Details</NavDropdown.Item>\n                        </LinkContainer>\n\n\n\n                        <NavDropdown.Item onClick={logoutHandler(history)}>Logout</NavDropdown.Item>\n\n                    </NavDropdown>\n                ) : (<Nav className=\"\" style={{ 'justify-content': 'flex-end', 'margin-right': '0px' }}>\n                    <LinkContainer to='/MemberHomeScreen' className='my-1 p-1'>\n                        <Nav.Link ><i className=\"fas fa-user my-2 p-2\"></i>Member Register/Login Screen</Nav.Link>\n                    </LinkContainer>\n\n                    <LinkContainer to='/OrganizationHomeScreen' className='my-1 p-1'>\n                        <Nav.Link ><i className=\"fas fa-user my-2 p-2\"></i>Organization Register/Login HomeScreen</Nav.Link>\n                    </LinkContainer>\n\n                </Nav>\n                )}\n\n\n\n\n\n\n            </Navbar.Collapse>\n        </Container>\n    </Navbar >\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nfunction Footer() {\n    return (\n        <div>\n            <footer style={{ background: 'lightgray' }}>\n                <Container>\n                    <Row>\n\n                        <Col className='text-center py-3'>Copyright &copy; The Helping Hands </Col>\n\n\n                    </Row>\n\n\n                </Container>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/MotoOfOurOrganization.0c95bd5e.JPG\";","import React from 'react'\n\nimport { Container, Navbar, Nav } from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport HomeScreen from \"./HomeScreen\";\nimport DonationScreen from \"./DonationScreen\";\n\nimport image from \"../images/MotoOfOurOrganization.JPG\"\n\n\n\nfunction MotoOfOurOrganizationScreen() {\n    return (\n        <div id='page_top' style={{ display: 'flex' }}>\n            {/* console.log(disasterImg); */}\n\n            {/* <img href='%PUBLIC_URL%/MotoOfOurOrganization.JPG' /> */}\n            {/* <img href={process.env.PUBLIC_URL + \"/MotoOfOurOrganization.JPG\"} /> */}\n\n            <div class='navbar' style={{\n                width: '290%', position: 'sticky', background: '#eafff1', height: '260%', 'border-radius': '10px',\n                top: '16%', 'box-shadow': '0 0 5px #000'\n            }}>\n                <h5>  <Nav defaultActiveKey=\"/\" className=\"flex-column\"><h4>Contents of the Page:</h4>\n                    <p>MOTO OF OUR ORGANIZATION</p>\n\n                    <p >HOW TO HELP YOUR COMMUNITY AFTER A NATURAL DISASTER</p>\n                    <p >FIVE REASONS FOR DONATING TO CHARITY</p>\n                    <p >MOTO TO VOLUNTEER</p>\n                    {/* \n\n                     <Nav.Link href=\"/#page_top\"><i class=\"fas fa-arrow-alt-circle-up\"></i>TOP of the Page</Nav.Link>\n\n                    <Nav.Link href=\"/#HOW_TO_HELP\">HOW TO HELP YOUR COMMUNITY AFTER A NATURAL DISASTER</Nav.Link>\n                    <Nav.Link href=\"/#FIVE_REASONS\">FIVE REASONS FOR DONATING TO CHARITY</Nav.Link>\n                    <Nav.Link href=\"/#MOTO_TO_VOLUNTEER\">MOTO TO VOLUNTEER</Nav.Link>\n\n                    <Nav.Link href=\"/MotoOfOurOrganizationScreen#MOTO_TO_VOLUNTEER\">MOTO TO VOLUNTEER</Nav.Link> */}\n\n                </Nav>\n                    <Link to='/DonationScreen' style={{\n                        color: 'rgb(50 55 39)', 'background-color': 'rgb(255 203 5)'\n                    }} ><i class=\"fas fa-hand-holding-usd\"></i>Donations link</Link>\n                </h5>\n            </div>\n\n            <div id='matter_data' style={{ textAlign: 'justify' }} className='my-3 p-3'>\n\n                <p id='Para1'>\n\n                    <h4 id='' ><i class=\"fas fa-crosshairs\"></i>Moto Of Our Organization</h4>\n                    The COVID‐19 pandemic poses an exceptional challenge for humanity. Because public behaviour\n                    is key to curbing the pandemic at an early stage, it is important for social psychological\n                    researchers to use their knowledge to promote behaviours that help manage the crisis. Here,\n                    we identify human values as particularly important in driving both behavioural compliance to\n                    government guidelines and promoting prosocial behaviours to alleviate the strains arising\n                    from a prolonged pandemic. Existing evidence demonstrates the importance of human values,\n                    and the extent to which they are shared by fellow citizens, for tackling the COVID‐19 crisis.\n                    Individuals who attach higher importance to self‐transcendence (e.g., responsibility) and\n                    conservation (e.g., security) values are likely to be more compliant with COVID‐19 behavioural\n                    guidelines and to help others who are struggling with the crisis. Further, believing that fellow\n                    citizens share one's values has been found to elicit a sense of connectedness that may be\n                    crucial in promoting collective efforts to contain the pandemic. The abstract nature of values,\n                    and cross‐cultural agreement on their importance, suggests that they are ideally suited to\n                    developing and tailoring effective, global interventions to combat this pandemic.\n\n                </p>\n\n                <h4 id='HOW_TO_HELP' >HOW TO HELP YOUR COMMUNITY AFTER A NATURAL DISASTER</h4>\n                <p>\n                    <img src={image} style={{ width: '100%' }} />\n\n                    <p>In the aftermath of a natural disaster or violent weather event, entire communities can be\n                        displaced, destroyed, and in need of help. We’ve seen over the years the effects of massive\n                        hurricanes such as Hurricane Harvey in Texas, or Hurricane Michael in Northern Florida, and more\n                        recently the violent Tornados tearing through Missouri.</p>\n                    <p>When the weather subsides, and the damage is done, reality sets it for those who have suffered\n                        through it. Survivors and those effected first hand by these acts of mother nature need help,\n                        both near and far. From simple donations such as food and water, to medical and psychological\n                        care, and more, we can help rebuild and help others get back to their normal lives in the wake of\n                        adversity.</p>\n                    <h6>If you want to help your community in the aftermath of a natural disaster, here are some things\n                        you can do:</h6>\n                    <h6>1. Send Funds or Crucial Supplies  :<Link to='/DonationScreen' style={{\n                        color: 'rgb(50 55 39)', 'background-color': 'rgb(255 203 5)'\n                    }} ><i class=\"fas fa-hand-holding-usd\"></i>Donations link</Link></h6>\n                    Usually the most effective way to help victims of a natural disaster or emergency is to donate to\n                    a disaster relief organization. With proper planning and such these organizations can then use\n                    the financial stimulus to help their efforts immediately and long term over the coming months\n                    and years of rebuilding. If you donate goods be sure that they are needed or part of a list of\n                    donatable items. Storing and sorting unnecessary or an overabundance of goods can be very\n                    costly and time consuming for relief efforts.\n                    <p>2. Volunteer to Help:  <Link disabled to='/' style={{\n                        color: 'rgb(50 55 39)', 'background-color': '#4bbf73'\n                    }} >(Register as a Member for volunteering in Member Registration Page)</Link></p>\n                    When you see the destruction and aftermath of a disaster with your own eyes, you may feel\n                    the need to lend a hand to rebuilding efforts. There are many ways you can help volunteer\n                    for disaster relief and doing something that you are efficient in is the best way to help your\n                    community. For direct help in the most affected areas look into American Red Cross Disaster\n                    Training. For other ideas, think about helping communities in ways that deal with shelter,\n                    nutrition, and emotional support. Local nonprofits need all the help they can get in these\n                    situations and any assistance you can provide can go a long way in the rebuilding process.\n                    <h6>3. Donate Blood:  <Link to='/DonationScreen' style={{\n                        color: 'rgb(50 55 39)', 'background-color': 'rgb(255 203 5)'\n                    }} ><i class=\"fas fa-hand-holding-usd\"></i>Donations link</Link></h6>\n                    <p>If you’re eligible and able, giving blood is one of the best ways to help save lives following a\n                        disaster. Hospitals have historically shown an increased demand for blood after disasters and\n                        due to the short shelf life, they can’t just stock up months ahead of time to alleviate the future\n                        demand. Contact the American Red Cross or local relief efforts to see if and where you can\n                        donat</p>\n\n                </p>\n\n                <h4 id='FIVE_REASONS' >FIVE REASONS FOR DONATING TO CHARITY</h4>\n                <p>\n\n\n\n                    Donating to the causes you care about not only benefits the charities themselves, it can be\n                    deeply rewarding for you too. Millions of people give to charity on a regular basis to support\n                    causes they believe in, as well as for the positive effect it has on their own lives.\n                    <h6>1. GIVING TO CHARITY MAKES YOU FEEL GOOD</h6>\n                    Donating to charity is a major mood-booster. The knowledge that you’re helping others is hugely\n                    empowering and, in turn, can make you feel happier and more fulfilled.\n                    <h6>2. GIVING TO CHARITY STRENGTHENS PERSONAL VALUES</h6>\n                    Having the power to improve the lives of others is, to many people, a privilege, and one that\n                    comes with its own sense of obligation. Acting on these powerful feelings of responsibility is a\n                    great way to reinforce our own personal values and feel like we’re living in a way that is true to\n                    our own ethical beliefs.\n                    <h6>3. GIVING IS MORE IMPACTFUL THAN EVER</h6>\n                    Many people are concerned that their donations to charity may be reduced by tax or\n                    administrative costs, preventing the full amount from reaching the people or causes they really\n                    want to help. Thankfully there are ways to make the most of every donation to charity. There are\n                    many other ways to give to charity tax-effectively too, such as by donating straight from your\n                    salary before tax is deducted through a payroll giving scheme, donating shares to charity or\n                    leaving a charitable legacy in your Will. These methods of giving ensure your chosen charities\n                    benefit as much as possible from your support.\n                    <h6>4. GIVING TO CHARITY INTRODUCES YOUR CHILDREN TO THE IMPORTANCE OF GENEROSITY</h6>\n                    Sharing the experience of donating to charity with your children shows them from a young\n                    age that they can make positive changes in the world. Children naturally love to help others, so\n                    nurturing their innate generosity is likely to mean that they grow up with a greater appreciation\n                    of what they have, and will carry on supporting charity in years to come.\n                    Starting a tradition of donating to charity with your children is easy - try creating a family\n                    donation box that everyone can add to and nominate a family charity each year, involving thechildren in choosing which causes to support\n                    <h6>5. GIVING TO CHARITY ENCOURAGES FRIENDS AND FAMILY TO DO THE SAME</h6>\n                    Your own charitable donations can inspire your nearest and dearest to give to causes important\n                    to them, and could even bring about a family-wide effort to back a charity or charities that have\n                    special significance to you as a group.\n\n                </p>\n\n\n                <h4 id='MOTO_TO_VOLUNTEER' >MOTO TO VOLUNTEER</h4>\n                <p>\n                    Many of the reasons that people volunteer and help can be universally applied to volunteers of\n                    any background. It's important to remember the basic human motivations for volunteering and\n                    helping when you're thinking of retooling your volunteer program because you will want to make\n                    sure that you respond to the needs of all of your volunteers and helpers.\n                    <h6>Some of the basic reasons for volunteering and helping include:</h6>\n                    <li>Helping others.</li>\n                    <li>Having an interest in the work or activity.</li>\n                    <li>Wanting to learn and gain experience.</li>\n                    <li>Having free time available.</li>\n                    <li>Being devoted to the cause.</li>\n                    <li>Knowing someone else who was involved.</li>\n                    <li>Of course, in addition to these basic motivations, people who volunteer find other benefits,including the following (\"Matter of Survival: Volunteering,\" Points of Light Foundation):</li>\n                    <li>Acquisition of new skills.</li>\n                    <li>Higher self-esteem.</li>\n                    <li>New contacts and networks.</li>\n                    <li>Possibility for a new job</li>\n\n                </p>\n\n\n\n\n            </div >\n        </div >\n\n    )\n}\n\nexport default MotoOfOurOrganizationScreen\n\n","import React from 'react'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\nimport HomeScreen from \"./HomeScreen\";\nimport MotoOfOurOrganizationScreen from \"./MotoOfOurOrganizationScreen\";\nfunction DonationScreen() {\n    return (\n        <div><h2 className='my-2 p-2' style={{margin:'0 auto','text-align': 'center'}}> Make a donation </h2>\n            <h4 className='my-2 p-2'>\n\n                Type of donations \n                \n            </h4>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Financial Help</li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Food Donations </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Medicinies </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Materials, Clothings etc. </li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Blood donations</li>\n           <li className='my-2 p-1' style={{'font-size': '20px'}}>Can volunteer in activities by <Link disabled to='/' style={{\n                        color: 'rgb(50 55 39)', 'background-color': '#4bbf73'\n                    }} ><i class=\"fas fa-user\"></i>(Register as a Member for volunteering in Member Registration Page)</Link></li>\n            \n            <h5 className='my-2 p-2'> Kindly contact this email for the donations link: <a href=''>'thehelpinghands@gmail.com'</a></h5>\n            {/* <img src=\"https://natureconservancy-h.assetsadobe.com/is/image/content/dam/tnc/nature/en/photos/tnc_96397258_Full.jpg?crop=0,708,4000,1250&amp;wid=3200&amp;hei=1000&amp;scl=1.25\" alt=\"The morning clouds and fog lift off the small towns in the lower Himalaya mountains.\" class=\"image-position-desktop__center-middle image-position-mobile__center-middle hero-img-ie-fix whiteText\"></img> */}\n            <h6><LinkContainer to='/' className='my-1 p-1'>\n                <Nav.Link >Back to '<i class=\"fas fa-crosshairs\"></i>Motto of our Organization' page</Nav.Link>\n            </LinkContainer>\n            </h6></div >\n    )\n}\n\nexport default DonationScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport MotoOfOurOrganizationScreen from '../MotoOfOurOrganizationScreen'\n\n\nfunction MemberHomeScreen() {\n    return (\n        <div> <h3>Currently viewing Member Home screen</h3>\n            <div id='member_homeScreenContents' >\n                <h5>Links:</h5>\n                <Link to='/MemberRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member Registration Screen</Link>\n\n                <Link to='/MemberLoginScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Member Login Screen</Link>\n\n                {/* <Link to='/MemberUpdateDetailsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member Update Details Screen</Link> */}\n\n                {/* <Link to='/MemberViewTasksScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Member View Task Details Screen</Link> */}\n\n\n                {/* <MotoOfOurOrganizationScreen /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default MemberHomeScreen\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport MotoOfOurOrganizationScreen from '../MotoOfOurOrganizationScreen'\n\nfunction OrganizationHomeScreen() {\n    return (\n        <div> <h3>Currently viewing Organization Home screen</h3>\n            <div id='Organization_homeScreenContents'  >\n                <h5>Links:</h5>\n                <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Registration Screen</Link>\n\n                <Link to='/OrganizationLoginScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Organization Login Screen</Link>\n\n                {/* <Link to='/OrganizationUpdateDetailsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Update Details Screen</Link>\n\n                <Link to='/OrganizationViewMembersScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization View Members Screen </Link>\n\n                <Link to='/OrganizationPostsViewPostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Posts View Posts Screen </Link>\n\n                <Link to='/OrganizationPostsCreatePostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Organization Posts Create posts Screen </Link> */}\n\n                {/* <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}><i className=\"fas fa-user my-2 p-2\"></i>Organization Login Screen</Link> */}\n\n\n\n\n\n                {/* <MotoOfOurOrganizationScreen /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default OrganizationHomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { membersRegister } from '../../actions/memberActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction MemberRegisterScreen() {\n\n    // { location, history }\n\n    // const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n    // const config = {\n    //     headers: {\n    //         'Content-type': 'application/json'\n    //     }\n    // }\n    // const [email, setEmail] = useState('')\n    // const [username, setUsername] = useState('')\n    // const [password, setPassword] = useState('')\n\n\n    // //const [members, setMembers] = useState([])\n    // useEffect(() => {\n    //     console.log('Use Effect triggered')\n    //     async function fetchMembers() {\n    //         // const { data } = await axios.post(\n    //         //     '/api/organization/viewMembers/' \n    //         //     { 'email': email, 'password': password, 'username': username, \"isOrganizationMember\": false }, config) // ${ member.param.id }\n    //         // localStorage.setItem('userInfo', JSON.stringify(data))\n    //         console.log('Use Effect triggered')\n    //         //setMembers(data)\n    //     }\n    //     //Have to think for this\n    //     const submitHandler = (e) => {\n    //         e.preventDefault()\n    //         fetchMembers()\n    //     }\n    // }, [])\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const memberRegister = useSelector(state => state.memberRegister)\n    const { error, loading, memberInfo } = memberRegister\n\n    useEffect(() => {\n        // if (memberInfo) {\n        //     history.push(redirect)\n        // }\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(membersRegister(email, password, username, addressLocation))\n    }\n    // \n\n\n\n    return (\n        <Container className='my-3 p-2' style={{ 'text-align': 'center' }}  >\n\n\n            <h2> Register as a Member </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {memberInfo && <Alert  > {memberInfo.username} is registered succesfully</Alert>}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n                <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n                </Alert>\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Register as a Member\n                </Button>\n\n\n            </Form >\n            <Link to='/MemberLoginScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already regsitered? Click for Member Login screen</Link>\n        </Container >\n    )\n}\n\nexport default MemberRegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { memberLogin } from '../../actions/memberActions'\nimport { Card, Container, Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport { membersLogin } from '../../actions/memberActions'\n\nfunction MemberLoginScreen({ location, history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { error, loading, memberInfo } = memberLogin\n\n    useEffect(() => {\n        if (memberInfo) {\n            history.push(redirect)\n        }\n    }, [redirect, memberInfo, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(membersLogin(email, password))\n    }\n\n\n\n\n    return (\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Login as a Member </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                {/* {['checkbox'].map((type) => (\n                    <div key={type} className=\"mb-3\">\n                        <Form.Check type={type} id={`check-api-${type}`}>\n                            <Form.Check.Input type={type} isValid />\n                            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n                             <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback> \n                        </Form.Check>\n                    </div>\n                ))} */}\n\n                <Alert variant=\"success\">\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n\n                </Alert>\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Login as a Member\n                </Button>\n\n\n            </Form>\n            <Link to='/MemberRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Not regsitered yet? Click for Registration screen</Link>\n        </div >\n    )\n}\n\nexport default MemberLoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { getMemberDetails, membersUpdateProfile } from '../../actions/memberActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nimport { MEMBER_UPDATE_PROFILE_RESET } from '../../constants/memberConstants'\n\n\n\nfunction MemberUpdateDetailsScreen({ history }) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    // const [addressStreet, setAddressStreet] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [bloodGroup, setBloodGroup] = useState('')\n\n\n\n\n    const dispatch = useDispatch()\n\n    // const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    //const memberRegister = useSelector(state => state.memberRegister)\n    const memberDetails = useSelector(state => state.memberDetails)\n    const { loading, member } = memberDetails\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n    const memberUpdateProfile = useSelector(state => state.memberUpdateProfile)\n\n    const { error, success } = memberUpdateProfile\n    // error, \n    //const { error, loading, memberInfo } = memberRegister\n\n    useEffect(() => {\n        if (!memberInfo) {\n            history.push('/MemberLoginScreen')\n        } else {\n            if (!member || !member.username || success || memberInfo._id !== member._id) {\n                dispatch({ type: MEMBER_UPDATE_PROFILE_RESET })\n                dispatch(getMemberDetails(memberInfo._id))\n\n            } else {\n                setUsername(member.username)\n                setEmail(member.email)\n                // setAddressStreet(member.addressStreet)\n                setAddressLocation(member.addressLocation)\n                setBloodGroup(member.bloodGroup)\n\n            }\n        }\n\n\n\n\n\n\n    }, [dispatch, history, memberInfo, member, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        //dispatch(membersRegister(email, password, username))\n\n        dispatch(membersUpdateProfile(memberInfo._id, username, email, password, addressLocation, bloodGroup))\n        // 'id': member._id,\n        //     'username': username,\n        //         'email': email,\n        //             'password': password\n    }\n\n    // \n\n\n    return (\n        <div>\n\n            <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The Member Updates Details Page </h2>\n\n\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {/* {!loading && <Alert className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }} > {memberInfo.email} details are succesfully updated</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" disabled style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formGridAddressStreet\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Street\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i> Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridBloodGroup\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Blood Group</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Blood Group\" style={{ width: '70%' }}\n                        value={bloodGroup}\n                        onChange={(e) => setBloodGroup(e.target.value)} />\n                </Form.Group>\n\n\n\n\n\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Update details\n                    </Button>\n\n\n            </Form >\n\n        </div>\n    )\n}\n\nexport default MemberUpdateDetailsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport axios from 'axios'\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nfunction OrganizationViewMembersScreen({ member, history }) {\n\n    // const [members, setMembers] = useState([])\n    // useEffect(() => {\n    //     console.log('Use Effect triggered')\n    //     async function fetchMembers() {\n    //         const { data } = await axios.get('/api/organization/viewMembers/') /${member.param.id}\n    //         setMembers(data)\n    //     }\n    //     fetchMembers()\n    // }, [])\n\n    const dispatch = useDispatch()\n    const memberList = useSelector(state => state.memberList)\n    const { error, loading, members } = memberList\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else { dispatch(listMembers()) }\n    }, [dispatch, history])\n\n    return (\n        <Card className='my-3 p-3 rounded'>\n            {/* {member.name} */}\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div class='GetMembers'> <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The view member  details page  </h2>\n                        <Table striped bordered hover variant=\"light\">\n                            <thead>\n                                <tr>\n                                    <th style={{ 'font-size': '13px' }}>Member Id:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Name:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Email:</th>\n                                    <th style={{ 'font-size': '13px' }}>Member Location: </th>\n                                    <th style={{ 'font-size': '13px' }}>Blood Group:</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {members.map(member => (\n                                    // <Row>\n\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Username: {member.username}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Email: {member.email}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={member._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Area: {member.city_state_country}  </p>\n\n\n                                    //     </Col>\n\n\n                                    // </Row>\n\n\n                                    <tr>\n                                        <td key={member._id} >\n                                            <p>  {member._id} </p></td>\n                                        <td key={member._id} >\n                                            <p>  {member.username} </p></td>\n                                        <td key={member._id} >\n                                            <p>  {member.email}  </p> </td>\n                                        <td key={member._id}><p>\n                                            {member.addressLocation} </p></td>\n                                        <td key={member._id}><p>\n                                            {/* {moment(member.createdAt).format('YYYY-MMM-DD')} </p></td> */}\n                                            {member.bloodGroup} </p></td>\n                                    </tr>\n\n\n\n\n                                ))}\n\n                            </tbody>\n                        </Table>\n\n                        <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                            Number of Registered Members: {Object.keys(members).length}\n                        </h5>\n                    </div >}\n\n\n            {/*  Use the a href to navigate through other url-> Load a new windows */}\n            {/* <Card.body>\n               \n                 <Card.text as div>\n                    <div className='my-3'>\n                        {member.name} </div>\n                </Card.text> \n\n           </Card.body>  */}\n\n        </Card >\n    )\n}\n\nexport default OrganizationViewMembersScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsRegister } from '../../actions/organizationActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction OrganizationRegisterScreen() {\n    //{ location, history }\n    // const a = { \"_id\": 16, \"username\": \"sadasd\", \"email\": \"sdsa@asdas.sdfs\", \"password\": \"asdasd\", \"Address_line\": null, \"city_state_country\": null, \"createdAt\": \"2021-04-19T22:11:52.795653Z\", \"isOrganizationMember\": true, \"yearOfEstablishment\": null, \"chairman\": null }\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n\n    const dispatch = useDispatch()\n\n    //const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const organizationRegister = useSelector(state => state.organizationRegister)\n    const { error, loading, organizationInfo } = organizationRegister\n\n    useEffect(() => {\n        //if (organizationInfo) {\n        //   history.push(redirect)\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(organizationsRegister(email, password, username, addressLocation))\n    }\n    return (\n\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Register as an Organization </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n\n            {organizationInfo && <Alert  > {organizationInfo.username} is registered succesfully</Alert>}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n\n                <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n    </p>\n\n                </Alert>\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Register as an Organization\n            </Button>\n\n\n            </Form>\n            <Link to='/OrganizationLoginScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already regsitered? Click for Member Login screen</Link>\n        </div >\n    )\n}\n\n\nexport default OrganizationRegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsLogin } from '../../actions/organizationActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nfunction OrganizationLoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { error, loading, organizationInfo } = organizationLogin\n\n    useEffect(() => {\n        if (organizationInfo) {\n            history.push(redirect)\n        }\n    }, [history, organizationInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(organizationsLogin(email, password))\n    }\n    return (\n\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> Login as an Organization </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                {/* {['checkbox'].map((type) => (\n                    <div key={type} className=\"mb-3\">\n                        <Form.Check type={type} id={`check-api-${type}`}>\n                            <Form.Check.Input type={type} isValid />\n                            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n                             <Form.Control.Feedback type=\"valid\">You did it!</Form.Control.Feedback> \n                        </Form.Check>\n                    </div>\n                ))} */}\n\n                < Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update details page. Have a good day!\n                    </p>\n\n\n                </Alert >\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Login as an Organization\n                </Button>\n\n\n            </Form >\n            <Link to='/OrganizationRegisterScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Not regsitered yet? Click for Registration screen</Link>\n        </div >\n\n    )\n}\n\nexport default OrganizationLoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport { getOrganizationDetails, organizationsUpdateProfile } from '../../actions/organizationActions'\nimport ReactDOM from 'react-dom';\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nimport { ORGANIZATION_UPDATE_PROFILE_RESET } from '../../constants/organizationConstants'\nfunction OrganizationUpdateDetailsScreen({ history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    // const [addressStreet, setAddressStreet] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [chairman, setChairman] = useState('')\n\n\n\n\n    const dispatch = useDispatch()\n\n    const organizationDetails = useSelector(state => state.organizationDetails)\n    const { loading, organization } = organizationDetails\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const organizationUpdateProfile = useSelector(state => state.organizationUpdateProfile)\n\n    const { error, success } = organizationUpdateProfile\n\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            if (!organization || !organization.username || success || organizationInfo._id !== organization._id) {\n                dispatch({ type: ORGANIZATION_UPDATE_PROFILE_RESET })\n                dispatch(getOrganizationDetails(organizationInfo._id))\n\n            } else {\n                setUsername(organization.username)\n                setEmail(organization.email)\n                // setAddressStreet(organization.addressStreet)\n                setAddressLocation(organization.addressLocation)\n                setChairman(organization.chairman)\n\n\n            }\n        }\n\n\n\n\n\n\n    }, [dispatch, history, organizationInfo, organization, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n\n\n        dispatch(organizationsUpdateProfile(organizationInfo._id, username, email, password, addressLocation, chairman))\n\n    }\n\n\n\n\n    return (\n        <div>\n\n            <h2 className='my-3 p-2' style={{ 'text-align': 'center' }} >The Organization Updates Details Page </h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n            {/* {!loading && <Alert className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }} > {memberInfo.email} details are succesfully updated</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Username</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridEmail\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Email</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" disabled style={{ width: '70%' }}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" style={{ width: '70%' }}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridchairman\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}> Organization Chairman</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter chairman \" style={{ width: '70%' }}\n                        value={chairman}\n                        onChange={(e) => setChairman(e.target.value)} />\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formGridAddressStreet\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Street\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                <Form.Group controlId=\"formGridAddressLocation\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i> Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n\n\n\n\n\n\n\n\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Update details\n                    </Button>\n\n\n            </Form >\n        </div>\n    )\n}\n\nexport default OrganizationUpdateDetailsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\n// import Moment from 'react-moment';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table, Modal } from 'react-bootstrap'\nimport Select from 'react-select'\n\nimport axios from 'axios'\nimport { organizationPostslist, organizationsPostsUpdatePost } from '../../actions/organizationActions'\n\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\n\nfunction OrganizationPostsViewPostsScreen({ organizationPost, history }) {\n\n    //const organizationPost = []\n    // const dateToFormat = '1976-04-19T12:59-0500';\n    const [editModel, setEditmodel] = useState(false)\n    const [selectedPost, setSelectedPost] = useState({})\n\n    const [requirementInformation, setRequirementInformation] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [addressStreet, setAddressStreet] = useState('')\n    const [MemberSelected, setMemberSelected] = useState('')\n    const [post_id, setPost_id] = useState('')\n    const [post, setPost] = useState('')\n\n    //Video file\n    const [selectedFile, setSelectedFile] = useState('')\n    //Video file description\n    const [description, setDescription] = useState('')\n    const [videoPost_id, setVideoPost_id] = useState('')\n\n\n    const dispatch = useDispatch()\n\n    const memberList = useSelector(state => state.memberList)\n    const { error: errorMemberList, loading: loadingMembers, members } = memberList\n\n    const organizationPostList = useSelector(state => state.organizationPostList)\n    const { error, loading, organizationPosts } = organizationPostList\n\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    const organizationPostUpdateList = useSelector(state => state.organizationPostUpdateList)\n    const { error: errorOrganizationPostUpdateList, loading: loadingOrganizationPostUpdateList, organizationPostsUpdatePost } = organizationPostUpdateList\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            dispatch(listMembers())\n            dispatch(organizationPostslist(organizationInfo._id))\n\n\n        }\n    }, [history, organizationPostsUpdatePost, errorOrganizationPostUpdateList])\n\n\n\n    const editOrganizationPost = (data) => {\n\n        console.log(data)\n\n\n        setEditmodel(true)\n        setSelectedPost(data)\n\n        setRequirementInformation(data.requirementInformation)\n        setAddressLocation(data.addressLocation)\n        setMemberSelected(data.MemberSelected)\n\n        //For Edit Model\n        setPost_id(data.id) //post ID\n        setVideoPost_id(data.id)\n        setDescription(data.description)\n\n\n        console.log(members)\n\n    }\n    const handleClose = () => {\n\n        setEditmodel(false)\n\n\n    }\n    const handleChange = (e) => {\n        console.log(e)\n        setMemberSelected(e.value)\n        setPost(e)\n\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        setEditmodel(false)\n\n        console.log(requirementInformation)\n        console.log(addressLocation)\n        console.log(MemberSelected)\n        console.log(post_id)\n\n\n        // dispatch(organizationsPostsUpdatePost(post_id, requirementInformation, addressLocation, MemberSelected))\n        // dispatch(organizationsPostsCreatePost(organizationInfo._id, requirementInformation, organizationInfo.email, addressLocation))\n\n    }\n\n\n    const onChangeHandler1 = (e) => {\n        // this.setState({\n        //     selectedFile: e.target.files[0],\n        //     loaded: 0,\n        // });\n        setSelectedFile(e.target.files[0]);\n        console.log(e.target.files[0]);\n    };\n\n    const handleSubmit1 = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        // const { selectedFile } = this.state;\n        // formData.append('VideopostId', organizationInfo._id);\n        formData.append('postedByOrganization', organizationInfo._id);\n        formData.append('postedByOrganizationEmail', organizationInfo.email);\n\n        formData.append('description', description);\n\n        formData.append('video_file', selectedFile);\n        console.log(formData);\n        fetch('/api/organization/createVideoPost/', {\n            method: 'POST',\n            body: formData,\n        });\n        alert('The file has been uploaded successfully. Refresh the page');\n        dispatch(organizationPostslist(organizationInfo._id))\n    };\n\n    const handleSubmit2 = (e) => {\n        e.preventDefault();\n        setEditmodel(false)\n        const formData = new FormData();\n        // const { selectedFile } = this.state;\n        formData.append('videoPost_id', videoPost_id);\n        formData.append('postedByOrganization', organizationInfo._id);\n        formData.append('postedByOrganizationEmail', organizationInfo.email);\n\n        formData.append('description', description);\n\n        formData.append('video_file', selectedFile);\n        console.log(formData);\n        fetch('/api/organization/updateVideoPost/', {\n            method: 'POST',\n            body: formData,\n        });\n        alert('The file has been saved successfully. Refresh the page');\n\n\n    };\n\n    // // When user selects a file, set state\n    // onFileChange = e => {\n    //     setSelectedFile(e.target.files[0]);\n    // };\n    // // when user uploads file this function should execute\n    // onFileUpload = () => {\n    //     const formData = new FormData();\n    //     formData.append(\n    //         \"myFile\",\n    //         selectedFile,\n    //         selectedFile.name\n    //     );\n    //     // console log uploaded file details\n    //     console.log(selectedFile);\n    //     // user send req to the server\n    //     axios.post(\"api/uploadfile\", formData);\n    // };\n\n\n    return (\n        <div>\n\n            <Card className='my-3 p-3 rounded'>\n                {/* {member.name} */}\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        :\n                        <div class='GetOrganizationPosts'> <h2 style={{ 'textAlign': 'center' }}>The Organization Posts Details: </h2>\n\n\n                            <form onSubmit={handleSubmit1}>\n\n\n                                <h3>Upload a new file:</h3>\n\n\n                                <Form.Group controlId=\"formGridDescription\" style={{ display: 'flex' }}>\n                                    <Form.Label style={{ width: '30%' }}>File Description: </Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter File Description\" style={{ width: '70%' }}\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)} />\n                                </Form.Group>\n                                <label>\n                                    <input type=\"file\" name=\"file\" onChange={onChangeHandler1} />\n                                </label>\n                                <button style={{ 'background-color': '#008CBA' }} type=\"submit\">\n                                    Upload\n                                </button>\n                                <br /><br />\n\n                            </form>\n\n\n                            <Table striped bordered hover variant=\"light\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ 'font-size': '13px' }}>Post Id:</th>\n                                        <th style={{ 'font-size': '13px' }}>(Reference)Description:</th>\n                                        <th style={{ 'font-size': '13px' }}>Posted by Organization email:</th>\n                                        <th style={{ 'font-size': '13px' }}> </th>\n                                        <th style={{ 'font-size': '13px' }} > Timeline:</th>\n\n                                    </tr>\n                                </thead>\n\n                                {organizationPosts.map((organizationPost, index) => (\n                                    // <Row>\n\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Organization Requirement Information: {organizationPost.requirementInformation}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Posted by: {organizationInfo.username}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Assigned to : {organizationPost.MemberSelected_id ? organizationPost.MemberSelected_id : 'None'}  </p>\n\n\n                                    //     </Col>\n                                    //     <Col key={organizationPost._id} sm={12} lg={4} xl={3}>\n                                    //         <p> Timeline : <moment >  </moment> </p>\n\n\n                                    //     </Col>\n\n                                    // </Row>\n                                    <tbody>\n\n                                        <tr>\n                                            <td key={organizationPost._id} >\n                                                <p> {index + 1} </p></td>\n                                            <td key={organizationPost._id} >\n                                                <p>({organizationPost.id}){organizationPost.description} </p></td>\n                                            <td key={organizationPost._id} >\n                                                <p>  {organizationPost.postedByOrganizationEmail}  </p> </td>\n\n\n                                            <td key={organizationPost._id}  ><p>\n\n                                                <video controls width=\"250\">\n\n\n\n                                                    <source src={organizationPost.video_file}\n                                                        type=\"video/webm\" />\n                                                </video>\n\n\n\n                                            </p></td>\n\n                                            {/*\n                                                {organizationPost.MemberSelected ? (organizationPost.MemberSelected) : 'None'}\n                                                \n                                                \n                                                <td key={organizationPost._id}  >\n\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Company\"\n                                                    name=\"company\"\n                                                    value={organizationPost.MemberSelected}\n                                                    onChange={(e) => onChange(e)}\n                                                />\n                                            </td> */}\n\n\n                                            <td key={organizationPost._id}><p>\n                                                {moment(organizationPost.createdAt).format('DD-MMM-YYYY')}\n                                            </p> </td>\n                                            <td key={organizationPost._id}>\n                                                <p>\n\n                                                    <button type=\"button\" onClick={() => editOrganizationPost(organizationPost)} >Edit Post</button>\n                                                </p>\n                                            </td>\n\n                                        </tr>\n                                        {/* < h1 hidden (organizationPost.MemberSelected ? i++ : 'NULL) /> */}\n                                    </tbody>\n                                    // getValueOfI(organizationPost)\n\n\n                                ))}\n                            </Table>\n                            <h5 className='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                Number of Organization Posts: {Object.keys(organizationPosts).length}\n                            </h5>\n                            <h5 className='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                {/* Number of Members assigned: {i} */}\n                            </h5>\n\n                        </div >}\n\n\n\n                <Modal show={editModel} onHide={handleClose} animation={false} style={{ top: '20vh' }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title style={{ 'max-width': '90%', margin: '0 28px' }} >Video Post Details Reference: {post_id} </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {loadingOrganizationPostUpdateList ? <Loader />\n                            : errorOrganizationPostUpdateList ? <Message variant='danger'>{errorOrganizationPostUpdateList}</Message> : ''}\n                        <Form className='p-2' style={{ 'max-width': '95%', margin: '0 auto' }}>\n\n                            <Form.Group controlId=\"formGridDescription\" style={{ display: 'flex' }}>\n                                <Form.Label style={{ width: '30%' }}>File Description: </Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter File Description\" style={{ width: '70%' }}\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)} />\n                            </Form.Group>\n                            <label>\n                                <h3>Upload a new file:</h3>\n                                <input type=\"file\" name=\"file\" onChange={onChangeHandler1} />\n                            </label>\n\n                            {/* <Form.Group controlId=\"formGridMemberSelected\" style={{ display: 'flex' }}>\n                                <Form.Label style={{ width: '30%' }}>Member Selected_id</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                                    value={MemberSelected}\n                                    onChange={(e) => setMemberSelected(e.target.value)} />\n                            </Form.Group> \n                            <span>Select Member: </span><Select\n                                value={post}\n                                onChange={handleChange}\n                                options={members && members.map(e => ({ value: e._id, label: e.username + \" from \" + e.addressLocation }))}\n                            />      */}\n\n                        </Form>\n\n\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleSubmit2}  >\n                            Save Post\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                {/*  Use the a href to navigate through other url-> Load a new windows */}\n                {/* <Card.body>\n               \n                 <Card.text as div>\n                    <div className='my-3'>\n                        {member.name} </div>\n                </Card.text> \n\n           </Card.body>  */}\n\n            </Card >\n\n\n\n\n        </div >\n    )\n}\n\n\nexport default OrganizationPostsViewPostsScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Alert, Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport axios from 'axios'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Router } from 'react-router'\nimport ReactDOM from 'react-dom';\n\nimport { organizationsPostsCreatePost } from '../../actions/organizationActions'\nimport { listMembers } from '../../actions/memberActions'\n\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\nimport Dropdown from 'react-dropdown';\nfunction OrganizationPostsCreatePostsScreen({ history }) {\n\n\n\n\n    const [requirementInformation, setRequirementInformation] = useState('')\n    const [addressLocation, setAddressLocation] = useState('')\n    const [addressStreet, setAddressStreet] = useState('')\n    const [MemberSelected_id, setMemberSelected_id] = useState('')\n    const [postedByOrganization_id, setpostedByOrganization_id] = useState('')\n    const [post_id, setPost_id] = useState('')\n\n    const dispatch = useDispatch()\n\n    const organizationLogin = useSelector(state => state.organizationLogin)\n    const { organizationInfo } = organizationLogin\n\n    // const memberList = useSelector(state => state.memberList)\n    // const { error, loading, members } = memberList\n\n    // const organizationPostList = useSelector(state => state.organizationPostList)\n    // const { error, loading, organizationPosts } = organizationPostList\n\n\n    const organizationPostCreatePost = useSelector(state => state.organizationPostCreatePost)\n    const { error, loading, organizationPostsCreatePost } = organizationPostCreatePost\n\n    useEffect(() => {\n        if (!organizationInfo) {\n            history.push('/OrganizationLoginScreen')\n        } else {\n            dispatch(listMembers())\n\n        }\n    }, [dispatch, history, organizationInfo])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n\n\n        dispatch(organizationsPostsCreatePost(organizationInfo._id, requirementInformation, organizationInfo.email, addressLocation))\n\n    }\n\n\n    return (\n        <div className='my-3 p-2' style={{ 'text-align': 'center' }}>\n            <h2> The Organization Posts Create Screen</h2>\n            {error && <Message variant='danger'>{error}</Message>}\n            {/* {loading && <Loader />} */}\n\n            {/* {organizationInfo && <Alert  > {organizationInfo.username} is registered succesfully</Alert>} */}\n            <Form onSubmit={submitHandler} className='my-3 p-2' style={{ 'max-width': '70%', margin: '0 auto' }}>\n\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Requirement Information</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter requirement Information\" style={{ width: '70%' }}\n                        value={requirementInformation}\n                        onChange={(e) => setRequirementInformation(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}><i class=\"fas fa-map-marker-alt\"></i>Address Location</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Address Location\" style={{ width: '70%' }}\n                        value={addressLocation}\n                        onChange={(e) => setAddressLocation(e.target.value)} />\n                </Form.Group>\n                {/* <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Address Street</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={addressStreet}\n                        onChange={(e) => setAddressStreet(e.target.value)} />\n                </Form.Group> */}\n                {/* <Form.Group controlId=\"formGridUsername\" style={{ display: 'flex' }}>\n                    <Form.Label style={{ width: '30%' }}>Member Selected_id</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" style={{ width: '70%' }}\n                        value={MemberSelected_id}\n                        onChange={(e) => setMemberSelected_id(e.target.value)} />\n                </Form.Group> */}\n\n                {/* <Dropdown\n                    title=\"Select Member\"\n                    list={members.username}\n                    toggleItem={toggleItem}\n                /> */}\n\n\n                {/* <Alert variant=\"success\" >\n                    <Alert.Heading>Hey, nice to see you</Alert.Heading>\n                    <hr />\n                    <p className=\"mb-0\">\n                        Kindly note that details can be updated any time in the update Posts details page. Have a good day!\n</p>\n\n                </Alert> */}\n                <Button variant=\"primary\" type=\"submit\" style={{ 'background-color': '#4bbf73' }}>\n                    Post requirement\n                    </Button>\n\n\n            </Form>\n            <Link to='/OrganizationPostsViewPostsScreen' className='my-1 p-1' style={{}}> <i className=\"fas fa-user my-2 p-2\"></i>Already Created? Click to check Created Posts Screen</Link>\n\n        </div >\n    )\n}\n\nexport default OrganizationPostsCreatePostsScreen\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom';\n// import Moment from 'react-moment';\nimport moment from 'moment'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, Container, Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport axios from 'axios'\nimport { membersTaskslist } from '../../actions/memberActions'\n\nimport { listMembers } from '../../actions/memberActions'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\n\n\nfunction MemberViewTasksScreen({ memberTasks, history }) {\n\n\n    const dispatch = useDispatch()\n    const memberTasksList = useSelector(state => state.memberTasksList)\n    const { error, loading, memberTask } = memberTasksList\n\n\n    const memberLogin = useSelector(state => state.memberLogin)\n    const { memberInfo } = memberLogin\n\n\n    useEffect(() => {\n        if (!memberLogin) {\n            history.push('/MemberLoginScreen')\n        } else {\n            dispatch(membersTaskslist(memberInfo._id))\n\n\n        }\n    }, [dispatch, history])\n\n\n\n    // <video controls width=\"250\">\n\n\n\n    //                             <source src=\"../../../../static/images/videos/Islands_-_2119_1.mp4\"\n    //                                 type=\"video/webm\" />\n\n    //                             <source src=\"/media/cc0-videos/flower.mp4\"\n    //                                 type=\"video/mp4\" />\n\n    //                             Sorry, your browser doesn't support embedded videos.\n    //                         </video>\n    return (\n        <div>\n            <Card className='my-3 p-3 rounded'>\n                {/* {member.name}    <img src={image} style={{ width: '100%' }} />  */}\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                        :\n                        <div class='GetOrganizationPosts'> <h2 style={{ 'textAlign': 'center' }}>The Member's AssignedTask Details Screen </h2>\n\n\n\n\n                            <Table striped bordered hover variant=\"light\">\n                                <thead>\n                                    <tr>\n                                        <th style={{ 'font-size': '13px' }}>Organization Post Id:</th>\n                                        <th style={{ 'font-size': '13px' }}>Organization Requirement Information:</th>\n                                        <th style={{ 'font-size': '13px' }}>Posted by Organization email:</th>\n                                        <th style={{ 'font-size': '13px' }}>Video:</th>\n\n\n                                    </tr>\n                                </thead>\n\n                                {memberTask.map(memberTask => (\n\n                                    <tbody>\n\n                                        <tr>\n                                            <td key={memberTask._id} >\n                                                <p>  {memberTask.id} </p></td>\n                                            <td key={memberTask._id} >\n                                                <p>  {memberTask.description} </p></td>\n\n                                            <td key={memberTask._id} >\n                                                <p>\n\n\n                                                    <video controls width=\"250\">\n\n\n\n                                                        <source src={\"http://127.0.0.1:8000\" + memberTask.video_file}\n                                                            type=\"video/webm\" />\n                                                    </video>\n                                                </p> </td>\n\n                                            <td key={memberTask._id}><p>\n                                                {moment(memberTask.createdAt).format('DD-MMM-YYYY')}\n                                            </p> </td>\n\n                                        </tr>\n                                        {/* < h1 hidden (organizationPost.MemberSelected ? i++ : 'NULL) /> */}\n                                    </tbody>\n                                    // getValueOfI(organizationPost)\n\n\n                                ))}\n                            </Table>\n                            <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                Number of Tasks Assigned: {Object.keys(memberTask).length}\n                            </h5>\n                            <h5 classNmae='my-2 p-2' style={{ margin: '0 auto', 'text-align': 'center' }}>\n                                {/* Number of Members assigned: {i} */}\n                            </h5>\n\n                        </div >}\n\n\n\n\n\n            </Card >\n\n        </div>\n    )\n}\n\nexport default MemberViewTasksScreen\n","import { Container, Form, Button } from \"react-bootstrap\";\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport DonationScreen from \"./screens/DonationScreen\";\nimport MotoOfOurOrganizationScreen from \"./screens/MotoOfOurOrganizationScreen\";\nimport MemberHomeScreen from \"./screens/MemberScreens/MemberHomeScreen\";\nimport OrganizationHomeScreen from \"./screens/OrganizationScreens/OrganizationHomeScreen\";\nimport MemberRegisterScreen from \"./screens/MemberScreens/MemberRegisterScreen\";\nimport MemberLoginScreen from \"./screens/MemberScreens/MemberLoginScreen\";\nimport MemberUpdateDetailsScreen from \"./screens/MemberScreens/MemberUpdateDetailsScreen\";\n\nimport OrganizationViewMembersScreen from \"./screens/OrganizationScreens/OrganizationViewMembersScreen\";\nimport OrganizationRegisterScreen from \"./screens/OrganizationScreens/OrganizationRegisterScreen\";\nimport OrganizationLoginScreen from \"./screens/OrganizationScreens/OrganizationLoginScreen\";\nimport OrganizationUpdateDetailsScreen from \"./screens/OrganizationScreens/OrganizationUpdateDetailsScreen\";\nimport OrganizationPostsViewPostsScreen from \"./screens/OrganizationScreens/OrganizationPostsViewPostsScreen\";\nimport OrganizationPostsCreatePostsScreen from \"./screens/OrganizationScreens/OrganizationPostsCreatePostsScreen\";\nimport MemberViewTasksScreen from \"./screens/MemberScreens/MemberViewTasksScreen\";\n\n\nfunction App() {\n  return (\n    <Router>\n\n      <div>\n        <Header />\n\n        {/* <main className=\"py-3\"> */}\n        <div style={{ background: 'whitesmoke' }}>\n          <Container  >\n            {/* <h1>My App</h1> */}\n            {/* <Route path='/' component={HomeScreen} exact />\n          <Route path='/MotoOfOurOrganizationScreen' component={MotoOfOurOrganizationScreen} /> */}\n\n            <Route path='/' component={MotoOfOurOrganizationScreen} exact />\n            <Route path='/DonationScreen' component={DonationScreen} />\n\n            <Route path='/MemberHomeScreen' component={MemberHomeScreen} />\n            <Route path='/OrganizationHomeScreen' component={OrganizationHomeScreen} />\n\n            {/* Below sample Screens */}\n\n            <Route path='/MemberRegisterScreen' component={MemberRegisterScreen} />\n            <Route path='/MemberLoginScreen' component={MemberLoginScreen} />\n            <Route path='/MemberUpdateDetailsScreen' component={MemberUpdateDetailsScreen} />\n            <Route path='/MemberViewTasksScreen' component={MemberViewTasksScreen} />\n\n            <Route path='/OrganizationRegisterScreen' component={OrganizationRegisterScreen} />\n            <Route path='/OrganizationLoginScreen' component={OrganizationLoginScreen} />\n            <Route path='/OrganizationUpdateDetailsScreen' component={OrganizationUpdateDetailsScreen} />\n            <Route path='/OrganizationViewMembersScreen' component={OrganizationViewMembersScreen} />\n            <Route path='/OrganizationPostsViewPostsScreen' component={OrganizationPostsViewPostsScreen} />\n            <Route path='/OrganizationPostsCreatePostsScreen' component={OrganizationPostsCreatePostsScreen} />\n\n\n          </Container>\n        </div>\n        {/* </main> */}\n\n        <Footer />\n      </div>\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}